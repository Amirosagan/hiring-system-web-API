// <auto-generated />
using System;
using HiringSystem.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiringSystem.Infrastructure.Migrations
{
    [DbContext(typeof(HiringSystemDbContext))]
    [Migration("20240423084927_InitialCreateSalary")]
    partial class InitialCreateSalary
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("HiringSystem.Domain.Job.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<int>("JobType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TalentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TalentJobUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkPlace")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Jobs", (string)null);
                });

            modelBuilder.Entity("HiringSystem.Domain.Job.Job", b =>
                {
                    b.OwnsMany("HiringSystem.Domain.Application.ValueObjects.ApplicationId", "ApplicationIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("JobId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Value")
                                .HasColumnType("TEXT")
                                .HasColumnName("ApplicationId");

                            b1.HasKey("Id");

                            b1.HasIndex("JobId");

                            b1.ToTable("JobApplicationIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.OwnsOne("HiringSystem.Domain.Job.ValueObjects.Salary", "Salary", b1 =>
                        {
                            b1.Property<Guid>("JobId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Maximum")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Minimum")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Period")
                                .HasColumnType("INTEGER");

                            b1.HasKey("JobId");

                            b1.ToTable("Jobs");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.Navigation("ApplicationIds");

                    b.Navigation("Salary")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
